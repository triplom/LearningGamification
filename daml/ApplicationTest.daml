module ApplicationTest where

import Daml.Script
import Application

-- Constants
accountId : Text
accountId = "<ID do contrato de conta existente>"

invalidStatus : Application.Status
invalidStatus = InvalidStatus

-- Test Cases
testScript : Script ()
testScript = do
  -- Test Case 1: Criar uma nova aplicação com sucesso
  let appId : ApplicationId <- createCmd $ Application with
    employee = "Natasha"
    courseParty = "Blockchain Course"
    name = "John Doe"
    address = "123 Main St"
    email = "john@example.com"
    phone = Some "123-456-7890"
    timestamp = "2024-05-04T12:00:00Z"
    status = New
    score = None
    comment = None
  submit appId

  -- Test Case 2: Submeter uma aplicação com sucesso (Atualizar status para "Pending")
  submitCmd2 <- exerciseCmd $ SubmitApplicationAndSetStatus appId Pending
  submit submitCmd2

  -- Test Case 3: Tentar atualizar status com um status inválido
  submitCmd3 <- exerciseCmd $ SubmitApplicationAndSetStatus appId invalidStatus
  submit submitCmd3

  -- Test Cases 4-5: Adicionar pontos à conta
  addPointsCmd <- exerciseCmd $ AddPoints accountId 50
  submit addPointsCmd

  addNegativePointsCmd <- exerciseCmd $ AddPoints accountId (-50)
  submit addNegativePointsCmd

  -- Test Case 6: Criar uma aplicação em branco com sucesso
  createBlankCmd <- exerciseCmd $ CreateBlankApplication "Andre" "Blockchain Course"
  submit createBlankCmd

  -- Test Case 7: Completar um curso com sucesso
  completeCmd <- exerciseCmd $ CompleteCourse appId accountId
  submit completeCmd