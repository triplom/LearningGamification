-- Application.daml

module Application where

-- Define a type alias for the contract ID of an application form
type ApplicationContractId = ContractId ApplicationForm

-- Define type aliases for commonly used data types
type Phone = Text
type Amount = Decimal

-- Define a custom data type to represent the status of an application
data Status = New | InProgress | Pending | Completed | InvalidStatus | Submitted
  deriving (Eq, Show)

-- Define a template for an application form
template ApplicationForm
  with
    -- Define the parties involved in the contract
    bc_platform : Party  -- Party representing the blockchain platform
    employee : Party     -- Party representing the employee
    -- Attributes of the application form
    status : Status      -- Status of the application
    name : Text          -- Name of the applicant
    address : Text       -- Address of the applicant
    email : Text         -- Email of the applicant
    phone : Phone        -- Phone number of the applicant
    timestamp : Time     -- Timestamp of the application
    amount : Amount      -- Amount associated with the application
    comment : Optional Text  -- Optional comment related to the application
  where
  -- Parties who can sign the contract
  signatory bc_platform, employee

  -- Ensure that the amount associated with the application is greater than 0.0
  ensure amount > 0.0

  -- Define a choice to submit the application
  choice ApplicationRequestSubmitted : ApplicationContractId
    controller bc_platform  -- Only the bc_platform party can control this choice
    do
      -- Get the current time
      now <- getTime 
      -- Create a new application form contract with the submitted status
      create ApplicationForm
        with 
          bc_platform
          employee
          status = Submitted
          timestamp = now
          name
          address
          email
          phone
          amount
          comment
