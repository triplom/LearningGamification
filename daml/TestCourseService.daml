module TestCourseService where

import Daml.Script
import Application
import CourseService
import DA.Date (toDateUTC, date, Month(Jun), Month(May))
import DA.Time (time)
import DA.List (head)

-- Tests

testCourseProposal: Script (ContractId CourseProposal)
testCourseProposal = script do
  -- Aloca as partes envolvidas
  educhain <- allocateParty "Educhain Incetive"
  customer <- allocateParty "Natacha"

  setTime (time (date 2024 May 15) 10 30 0)
  now <- getTime 

  -- Cria uma proposta de curso
  courseProposalCid <- submit educhain do
    createCmd CourseProposal with
      customer = customer
      educhain = educhain
      courseInfo = CourseInfo with
        customer = customer
        courseId = 1
        title = "Introduction to Blockchain"
        details = "An introductory course on blockchain technology"
        soloCourse = True
        account = 123456
        course_type = "Online"
        status = "Active"
        startDate = date 2024 Jun 02
        endDate = date 2024 Jun 10
      note = "Please review the proposal"
      
  -- Revisão da proposta de curso
  revisedCourseProposalCid <- submit customer do
    exerciseCmd courseProposalCid Revise with
      newCourseInfo = CourseInfo with
        customer = customer
        courseId = 1
        title = "Introduction to Blockchain (Revised)"
        details = "An introductory course on blockchain technology (Revised)"
        soloCourse = True
        account = 123456
        course_type = "Online"
        status = "Active"
        startDate = date 2024 Jun 03
        endDate = date 2024 Jun 31
      comment = "Updated course details"
  
  -- Rejeição da proposta de curso
  rejectedCourseProposalCid <- submit educhain do
    exerciseCmd courseProposalCid Reject with
      feedback = "Course proposal rejected due to incomplete details"
  
  -- Cancelamento da proposta de curso
  submit customer do
    exerciseCmd revisedCourseProposalCid Cancel
  
  return courseProposalCid
